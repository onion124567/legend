{"version":3,"sources":["assets/scripts/Game.js"],"names":["PokerUtil","require","AIHelper","self","StatusType","ENCOUNTER","ROUNDBEGIN","ROUNDOVER","CLEAR","SEND","LOSE","ATTACK","UNDERATTACK","totalCardNum","cc","Class","Component","properties","menuView","type","Button","coinValueView","Label","cardPrefab","Prefab","cardArrays","Layout","sendBtn","roundOverBtn","roundType","hero","enemy","currentCard","onLoad","node","on","roundOver","sendCard","gameEncounter","drawCard","newCard","instantiate","card","getComponent","bindCardBean","CardBean","bindCardFunction","onCheck","addChild","onCancel","RoleBean","scheduleOnce","roundProgram","rolettype","roundBegin","i","outerClick","director","loadScene","appendLog"],"mappings":"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","sourceRoot":"/","sourcesContent":["import CardBean from \"./beans/CardBean\";\nimport RoleBean from \"./beans/RoleBean\";\n\nlet PokerUtil = require(\"PokerUtil\");\nlet AIHelper = require(\"AIHelper\");\nlet self;\nexport var StatusType={\n    ENCOUNTER: 0,//遭遇\n    ROUNDBEGIN: 1,//回合开始\n    ROUNDOVER:-1,//回合结束\n    CLEAR:-2,//战斗结束\n\n    SEND: 2,//出牌\n    LOSE:3,//弃牌\n    ATTACK:4,//攻击时触发\n    UNDERATTACK:5,//被攻击时触发\n}\nlet totalCardNum=5;\n/**\n * 战斗界面 demo版本，做一个抽卡，每张卡能打3点血，敌方有20点血的demo\n */\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        menuView: {\n            default: null,\n            type: cc.Button,\n        },\n        coinValueView: {\n            default: null,\n            type: cc.Label,\n        },\n        cardPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        cardArrays:{\n            default: null,\n            type: cc.Layout,\n        },\n        sendBtn:{\n            default:null,\n            type:cc.Button,\n        },\n        roundOverBtn:{\n            default:null,\n            type:cc.Button,\n        },\n        roundType:StatusType.ROUNDBEGIN,\n        hero:{\n            default: null,\n            type: cc.Prefab\n        },\n        enemy:{\n            default: null,\n            type: cc.Prefab\n        },\n        currentCard:null,//当前选中的卡片\n\n    },\n\n    onLoad: function () {\n        self=this;\n        this.roundOverBtn.node.on(\"click\",  this.roundOver,this);\n        this.sendBtn.node.on(\"click\",this.sendCard,this);\n        this.gameEncounter();\n\n            // 这里的 this 指向 component\n\n    },\n    //抽牌\n    drawCard:function () {\n        let newCard = cc.instantiate(this.cardPrefab);\n        // newStar.setPicNum(\"i\"+i);\n        let card=newCard.getComponent('Card');\n        card.bindCardBean(new CardBean());\n        card.bindCardFunction(this.onCheck);\n\n        this.cardArrays.node.addChild(newCard);\n    },\n    onCheck:function(card){\n      if(self.currentCard!=null){\n          self.currentCard.onCancel();\n      }\n        self.currentCard=card;\n    },\n    /**\n     * 判断牌是否能出\n     * 判断知否是指向性牌\n     *\n     */\n    sendCard:function () {\n\n\n    },\n    roundOver:function () {\n\n    },\n    gameEncounter:function () {\n        let hero=new RoleBean(1);\n       let enemy=new RoleBean(0);\n\n        this.scheduleOnce( this.roundProgram(1),2);\n    },\n    /**\n     * 每回合的执行顺序\n     */\n    roundProgram:function (rolettype) {\n        if(rolettype===1){\n            this.hero.roundBegin();\n            //抽卡直到手牌抽满\n            for(let i=0;i<totalCardNum;i++){\n                this.drawCard();\n            }\n            //等待出牌\n        }\n\n\n    },\n\n//     move:function(node,distance){\n//         // 创建一个移动动作\n//         let seq = cc.repeat(\n//             cc.sequence(\n//                 cc.moveBy(2,  -distance, 50),\n//                 cc.moveBy(2,distance, -50)\n//             ), 2);\n//\n//\n// // 执行动作\n//         node.runAction(seq);\n// // 停止一个动作\n// //         node.stopAction(action);\n//     },\n    /**\n     * 切换至地图\n     */\n    outerClick:function(){\n        cc.director.loadScene('outermap');\n\n    },\n    appendLog:function(){\n\n    }\n\n});\n"]}