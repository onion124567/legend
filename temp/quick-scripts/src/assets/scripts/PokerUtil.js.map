{"version":3,"sources":["assets/scripts/PokerUtil.js"],"names":["pokerWeight","LEFT_WIN","RIGHT_WIN","PokerUtil","quaryPokerWeight","poker","indexOf","quaryIsHost","value","parseInt","quaryIsSocer","compareVice","roundhost","typeLeft","typeRight","contentLeft","contentRight","compareSinglePokerBigger","testLogic","testArray","gamehost","Math","random","console","log","length","testValue","substring","comparePoker","testArrayLogic","testArray1","testArray2","valueLeft","valueRight","quaryPokerValue","Array","isArray","error","compareArray","leftIsHost","rightIsHost","result","leftNum","rightNum","arrayLeft","sort","arrayRight","resultLeft","checkArrayValue","resultRight","array","odd","even","lastType","index","cardNum","type","str","quaryType","compare","compareRound","playPokers","destoryArray","destoryNode","i","destroy","a","b","floor","left","right","sortInsert","item","push","weight","firstWeight","lastWeight","quaryPokerTypeValue","pokerValue","sortPokers","gameHost","cardArray","type1Array","type2Array","type3Array","type4Array","hostArray","createStatic","concat","total","saveRecoder","userData","name","level","gold","cc","sys","localStorage","setItem","JSON","stringify","quaryReocder","parse","getItem"],"mappings":";;;;;;;;AAAA,IAAIA,WAAW,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,EAA9C,EAAkD,EAAlD,EAAsD,EAAtD,CAAlB,EAA4E;;AAC5E,IAAIC,QAAQ,GAAG,CAAC,CAAhB;AACA,IAAIC,SAAS,GAAG,CAAhB;;IACqBC;;;AAwBjB;;;;;;;;;;;AA4EA;;;;;;AAsBA;;;;YAIOC,mBAAP,0BAAwBC,KAAxB,EAA+B;AAC3B,WAAOL,WAAW,CAACM,OAAZ,CAAoBD,KAApB,CAAP;AACH;AAED;;;;;YAGOE,cAAP,qBAAmBF,KAAnB,EAA0B;AACtB,QAAIG,KAAK,GAAGC,QAAQ,CAACJ,KAAD,CAApB;AACA,WAAOG,KAAK,IAAI,EAAT,IAAeA,KAAK,IAAI,CAAxB,IAA6BA,KAAK,IAAI,CAAtC,IAA2CA,KAAK,IAAI,EAApD,IAA0DA,KAAK,IAAI,EAAnE,IAAyEA,KAAK,IAAI,EAAzF,CAFsB,CAEsE;AAC/F;AAED;;;;;;;YAKOE,eAAP,sBAAoBL,KAApB,EAA0B;AACtB,QAAGA,KAAK,IAAE,CAAP,IAAUA,KAAK,IAAE,EAApB,EAAuB;AACnB,aAAOA,KAAP;AACH,KAFD,MAEM,IAAGA,KAAK,IAAE,EAAV,EAAa;AACf,aAAO,EAAP;AACH,KAFK,MAEA;AACF,aAAO,CAAP;AACH;AACJ;AAED;;;;;;;;YAMOM,cAAP,qBAAmBC,SAAnB,EAA8BC,QAA9B,EAAwCC,SAAxC,EAAmDC,WAAnD,EAAgEC,YAAhE,EAA8E;AAC1E,QAAIF,SAAS,IAAID,QAAb,IAAyBD,SAA7B,EAAwC;AACpC,aAAOT,SAAS,CAACc,wBAAV,CAAmCF,WAAnC,EAAgDC,YAAhD,CAAP;AACH,KAFD,MAEO,IAAIH,QAAQ,IAAID,SAAhB,EAA2B;AAC9B,aAAOX,QAAP;AACH,KAFM,MAEA,IAAIa,SAAS,IAAIF,SAAjB,EAA4B;AAC/B,aAAOV,SAAP;AACH,KAFM,MAEA;AAAC;AACJ,aAAOD,QAAP;AACH;AAEJ;;;;;;;AA1KgBE,UAEVe,YAAY,UAACC,SAAD,EAAe;AAC9B,MAAIC,QAAQ,GAAGC,IAAI,CAACC,MAAL,KAAgB,CAA/B;AACA,MAAIV,SAAS,GAAGS,IAAI,CAACC,MAAL,KAAgB,CAAhC;AACAF,EAAAA,QAAQ,GAAGX,QAAQ,CAACW,QAAD,CAAR,GAAqB,CAAhC;AACAR,EAAAA,SAAS,GAAGH,QAAQ,CAACG,SAAD,CAAR,GAAsB,CAAlC;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,UAAUJ,QAAV,GAAqB,KAArB,GAA6BR,SAAlD;;AACA,MAAIO,SAAS,CAACM,MAAV,IAAoB,CAAxB,EAA2B;AACvB,QAAIC,SAAS,GAAGP,SAAS,CAAC,CAAD,CAAT,GAAe,EAA/B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBrB,SAAS,CAACC,gBAAV,CAA2BK,QAAQ,CAACiB,SAAS,CAACC,SAAV,CAAoB,CAApB,EAAuB,CAAvB,CAAD,CAAnC,CAArB;AACH,GAHD,MAGO,IAAIR,SAAS,CAACM,MAAV,IAAoB,CAAxB,EAA2B;AAC9BF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBrB,SAAS,CAACyB,YAAV,CAAuBR,QAAvB,EAAiCR,SAAjC,EAA4CO,SAAS,CAAC,CAAD,CAArD,EAA0DA,SAAS,CAAC,CAAD,CAAnE,CAArB;AACH;AACJ;;AAdgBhB,UAeV0B,iBAAiB,UAACC,UAAD,EAAaC,UAAb,EAA4B;AAChD,MAAIX,QAAQ,GAAGC,IAAI,CAACC,MAAL,KAAgB,CAA/B;AACA,MAAIV,SAAS,GAAGS,IAAI,CAACC,MAAL,KAAgB,CAAhC;AACAF,EAAAA,QAAQ,GAAGX,QAAQ,CAACW,QAAD,CAAR,GAAqB,CAAhC;AACAR,EAAAA,SAAS,GAAGH,QAAQ,CAACG,SAAD,CAAR,GAAsB,CAAlC;AAGH;;AAtBgBT,UAkCVyB,eAAe,UAACR,QAAD,EAAWR,SAAX,EAAsBoB,SAAtB,EAAiCC,UAAjC,EAAgD;AAClEV,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,mBAAmBrB,SAAS,CAAC+B,eAAV,CAA0BF,SAA1B,CAAnB,GAA0D,GAA1D,GAAgE7B,SAAS,CAAC+B,eAAV,CAA0BD,UAA1B,CAArF;;AACA,MAAIE,KAAK,CAACC,OAAN,CAAcJ,SAAd,KAA4BG,KAAK,CAACC,OAAN,CAAcH,UAAd,CAAhC,EAA2D;AACvD,QAAGD,SAAS,CAACP,MAAV,IAAkB,CAArB,EAAuB;AACnBO,MAAAA,SAAS,GAACA,SAAS,CAAC,CAAD,CAAnB;AACH;;AACD,QAAGC,UAAU,CAACR,MAAX,IAAmB,CAAtB,EAAwB;AACpBQ,MAAAA,UAAU,GAACA,UAAU,CAAC,CAAD,CAArB;AACH;AACJ;;AAED,MAAIE,KAAK,CAACC,OAAN,CAAcJ,SAAd,KAA4BG,KAAK,CAACC,OAAN,CAAcH,UAAd,CAAhC,EAA2D;AACvDV,IAAAA,OAAO,CAACc,KAAR,CAAc,OAAd,EAAuB,QAAvB;AACAlC,IAAAA,SAAS,CAACmC,YAAV,CAAuBlB,QAAvB,EAAiCR,SAAjC,EAA4CoB,SAA5C,EAAuDC,UAAvD;AACA,WAAOhC,QAAP;AACH;;AACD,MAAIgC,UAAU,IAAID,SAAlB,EAA6B;AACzB;AACA,WAAO/B,QAAP;AACH;;AACDgC,EAAAA,UAAU,GAAGA,UAAU,GAAG,EAA1B;AACAD,EAAAA,SAAS,GAAGA,SAAS,GAAG,EAAxB,CArBkE,CAsBlE;;AACA,MAAInB,QAAQ,GAAGmB,SAAS,CAACL,SAAV,CAAoB,CAApB,CAAf;AACA,MAAIb,SAAS,GAAGmB,UAAU,CAACN,SAAX,CAAqB,CAArB,CAAhB,CAxBkE,CAyBlE;;AACA,MAAIZ,WAAW,GAAGiB,SAAS,CAACL,SAAV,CAAoB,CAApB,EAAuB,CAAvB,CAAlB;AACA,MAAIX,YAAY,GAAGiB,UAAU,CAACN,SAAX,CAAqB,CAArB,EAAwB,CAAxB,CAAnB,CA3BkE,CA4BlE;;AACA,MAAIY,UAAU,GAAG1B,QAAQ,IAAIO,QAAZ,IAAwBjB,SAAS,CAACI,WAAV,CAAsBQ,WAAtB,CAAzC;AACA,MAAIyB,WAAW,GAAG3B,QAAQ,IAAIO,QAAZ,IAAwBjB,SAAS,CAACI,WAAV,CAAsBS,YAAtB,CAA1C,CA9BkE,CA+BlE;;AACA,MAAIuB,UAAU,IAAIC,WAAlB,EAA+B;AAC3B;AACA,QAAI/B,QAAQ,CAACM,WAAD,CAAR,IAAyB,CAA7B,EAAgC;AAC5B,aAAOd,QAAP;AACH,KAFD,MAEO,IAAIQ,QAAQ,CAACO,YAAD,CAAR,IAA0B,CAA9B,EAAiC;AACpC,aAAOd,SAAP;AACH,KAFM,MAEA;AACH;AACA,UAAIuC,MAAM,GAAGtC,SAAS,CAACc,wBAAV,CAAmCF,WAAnC,EAAgDC,YAAhD,CAAb;;AACA,UAAIyB,MAAM,IAAI,CAAd,EAAiB;AACb,eAAOA,MAAP;AACH,OAFD,MAEO;AACH;AACA,YAAI5B,QAAQ,IAAIO,QAAhB,EAA0B;AACtB,iBAAOnB,QAAP;AACH,SAFD,MAEO,IAAIa,SAAS,IAAIM,QAAjB,EAA2B;AAC9B,iBAAOlB,SAAP;AACH,SAFM,MAEA;AAAC;AACJ,iBAAOD,QAAP;AACH;AACJ;AAEJ;AACJ,GAvBD,MAuBO,IAAIsC,UAAJ,EAAgB;AACnB;AACA,WAAOtC,QAAP;AACH,GAHM,MAGA,IAAIuC,WAAJ,EAAiB;AACpB;AACA,WAAOtC,SAAP;AACH,GAHM,MAGA;AACH,WAAOC,SAAS,CAACQ,WAAV,CAAsBC,SAAtB,EAAiCC,QAAjC,EAA2CC,SAA3C,EAAsDC,WAAtD,EAAmEC,YAAnE,CAAP;AACH;AACJ;;AAlGgBb,UAyGVc,2BAA2B,UAACe,SAAD,EAAYC,UAAZ,EAA2B;AACzD,MAAID,SAAS,CAACP,MAAV,GAAmB,CAAnB,IAAwBQ,UAAU,CAACR,MAAX,GAAoB,CAAhD,EAAmD;AAC/CF,IAAAA,OAAO,CAACc,KAAR,CAAc,WAAWL,SAAX,GAAuB,GAAvB,GAA6BC,UAA3C;AACA,WAAO,CAAP;AACH;;AACD,MAAIS,OAAO,GAAGjC,QAAQ,CAACuB,SAAD,CAAtB;AACA,MAAIW,QAAQ,GAAGlC,QAAQ,CAACwB,UAAD,CAAvB;AACA,MAAIQ,MAAM,GAAGtC,SAAS,CAACC,gBAAV,CAA2BuC,QAA3B,IAAuCxC,SAAS,CAACC,gBAAV,CAA2BsC,OAA3B,CAApD;;AACA,MAAID,MAAM,GAAG,CAAb,EAAgB;AACZA,IAAAA,MAAM,GAAGvC,SAAT;AACH,GAFD,MAEO,IAAIuC,MAAM,GAAG,CAAb,EAAgB;AACnBA,IAAAA,MAAM,GAAGxC,QAAT;AACH;;AACD,SAAOwC,MAAP;AAEH;;AAxHgBtC,UA4KVmC,eAAe,UAAClB,QAAD,EAAWR,SAAX,EAAsBoB,SAAtB,EAAiCC,UAAjC,EAAgD;AAClE;AACA,MAAID,SAAS,CAACP,MAAV,IAAoBQ,UAAU,CAACR,MAA/B,IAAyCO,SAAS,CAACP,MAAV,GAAmB,CAAnB,IAAwB,CAArE,EAAwE;AACpEF,IAAAA,OAAO,CAACc,KAAR,CAAc,OAAd,EAAuB,SAAvB;AACA,WAAOpC,QAAP;AACH,GALiE,CAMlE;;;AACA,MAAI2C,SAAS,GAAGZ,SAAS,CAACa,IAAV,EAAhB;AACA,MAAIC,UAAU,GAAGb,UAAU,CAACY,IAAX,EAAjB,CARkE,CASlE;;AACA,MAAIE,UAAU,GAAG5C,SAAS,CAAC6C,eAAV,CAA0BJ,SAA1B,CAAjB;AACA,MAAIK,WAAW,GAAG9C,SAAS,CAAC6C,eAAV,CAA0BF,UAA1B,CAAlB;;AACA,MAAIC,UAAU,CAAC,CAAD,CAAV,IAAiB,IAArB,EAA2B;AACvB,WAAO7C,SAAP;AACH;;AACD,MAAI+C,WAAW,CAAC,CAAD,CAAX,IAAkB,IAAtB,EAA4B;AACxB,WAAOhD,QAAP;AACH;;AAED,MAAImB,QAAQ,IAAI2B,UAAU,CAAC,CAAD,CAAtB,IAA6BE,WAAW,CAAC,CAAD,CAA5C,EAAiD;AAC7C;AACA,QAAIF,UAAU,CAAC,CAAD,CAAV,GAAgBE,WAAW,CAAC,CAAD,CAA/B,EAAoC;AAChC,aAAOhD,QAAP;AACH,KAFD,MAEO;AACH,aAAOC,SAAP;AACH;AACJ,GAPD,MAOO,IAAIkB,QAAQ,IAAI2B,UAAU,CAAC,CAAD,CAA1B,EAA+B;AAClC,WAAO9C,QAAP;AACH,GAFM,MAEA,IAAImB,QAAQ,IAAI6B,WAAW,CAAC,CAAD,CAA3B,EAAgC;AACnC,WAAO/C,SAAP;AACH,GAFM,MAEA,IAAIU,SAAS,IAAImC,UAAU,CAAC,CAAD,CAAvB,IAA8BE,WAAW,CAAC,CAAD,CAA7C,EAAkD;AACrD;AACA,QAAIF,UAAU,CAAC,CAAD,CAAV,GAAgBE,WAAW,CAAC,CAAD,CAA/B,EAAoC;AAChC,aAAOhD,QAAP;AACH,KAFD,MAEO;AACH,aAAOC,SAAP;AACH;AACJ,GAPM,MAOA,IAAIU,SAAS,IAAImC,UAAU,CAAC,CAAD,CAA3B,EAAgC;AACnC,WAAO9C,QAAP;AACH,GAFM,MAEA,IAAImB,QAAQ,IAAI6B,WAAW,CAAC,CAAD,CAA3B,EAAgC;AACnC,WAAO/C,SAAP;AACH,GAFM,MAEA;AAAC;AACJ,WAAOD,QAAP;AACH,GA3CiE,CA6ClE;AACA;;AAEH;;AA5NgBE,UAiOV6C,kBAAkB,UAACE,KAAD,EAAW;AAChC,MAAIC,GAAG,GAAG,IAAV;AACA,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIC,QAAQ,GAAG,IAAf;AACA,MAAIZ,MAAM,GAAG,CAAb;;AACA,OAAK,IAAIa,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGJ,KAAK,CAACzB,MAAlC,EAA0C6B,KAAK,EAA/C,EAAmD;AAC/C,QAAIA,KAAK,GAAG,CAAR,IAAa,CAAjB,EAAoB;AAChBF,MAAAA,IAAI,GAAGF,KAAK,CAACI,KAAD,CAAZ;AACH,KAFD,MAEO;AACHH,MAAAA,GAAG,GAAGD,KAAK,CAACI,KAAD,CAAX;;AACA,UAAIF,IAAI,IAAID,GAAZ,EAAiB;AACb,eAAO,CAAC,IAAD,EAAO,CAAC,CAAR,CAAP;AACH;;AACD,UAAII,OAAO,GAAGJ,GAAd;AACA,UAAIK,IAAI,GAAG,GAAX;;AACA,UAAID,OAAO,IAAI,KAAX,IAAoBA,OAAO,IAAI,KAAnC,EAA0C;AACtC;AACAC,QAAAA,IAAI,GAAG,GAAP;AACH,OAHD,MAGO;AACH,YAAIC,GAAG,GAAGF,OAAO,CAAC5B,SAAR,CAAkB,CAAlB,CAAV;AACA6B,QAAAA,IAAI,GAAGrD,SAAS,CAACuD,SAAV,CAAoBD,GAApB,CAAP;AACH;;AACD,UAAIJ,QAAQ,IAAIG,IAAZ,IAAoBH,QAAQ,IAAI,IAApC,EAA0C;AACtC;AACA,eAAO,CAAC,IAAD,EAAO,CAAC,CAAR,CAAP;AACH;;AACDA,MAAAA,QAAQ,GAAGG,IAAX;AACA,UAAIG,OAAO,GAAGJ,OAAO,CAAC5B,SAAR,CAAkB,CAAlB,EAAqB,CAArB,CAAd;AACAc,MAAAA,MAAM,GAAGA,MAAM,GAAGtC,SAAS,CAACC,gBAAV,CAA2BK,QAAQ,CAACkD,OAAD,CAAnC,CAAlB;AACH;AACJ;;AACD,SAAO,CAACN,QAAD,EAAWZ,MAAX,CAAP;AACH;;AAjQgBtC,UAqQVyD,eAAe,UAACC,UAAD,EAAgB,CAErC;;AAvQgB1D,UAyQV2D,eAAe,UAACC,WAAD,EAAiB;AACnC,MAAIA,WAAW,IAAI,IAAnB,EAAyB;AACrB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,WAAW,CAACtC,MAAhC,EAAwCuC,CAAC,EAAzC,EAA6C;AACzCD,MAAAA,WAAW,CAACC,CAAD,CAAX,CAAeC,OAAf;AACH;AACJ;AACJ;;AA/QgB9D,UAgRV0C,OAAK,UAACqB,CAAD,EAAGC,CAAH,EAAO;AACfD,EAAAA,CAAC,GAAC7C,IAAI,CAAC+C,KAAL,CAAWF,CAAC,GAAC,EAAb,CAAF;AACAC,EAAAA,CAAC,GAAC9C,IAAI,CAAC+C,KAAL,CAAWD,CAAC,GAAC,EAAb,CAAF;AACA,MAAIE,IAAI,GAAClE,SAAS,CAACC,gBAAV,CAA2B8D,CAA3B,CAAT;AACA,MAAII,KAAK,GAACnE,SAAS,CAACC,gBAAV,CAA2B+D,CAA3B,CAAV;AACA,SAAOE,IAAI,GAACC,KAAZ;AACH;;AAtRgBnE,UAwRVoE,aAAW,UAACrB,KAAD,EAAOsB,IAAP,EAAc;AAC5B,MAAGtB,KAAK,CAACzB,MAAN,KAAe,CAAlB,EAAoB;AAChByB,IAAAA,KAAK,CAACuB,IAAN,CAAWD,IAAX;AACA,WAAOtB,KAAP;AACH,GAJ2B,CAK5B;;;AACA,MAAI1C,KAAK,GAACgE,IAAI,GAAC,EAAf;AACA,MAAIE,MAAM,GAACvE,SAAS,CAACC,gBAAV,CAA2BI,KAA3B,CAAX;AACA,MAAImE,WAAW,GAACxE,SAAS,CAACC,gBAAV,CAA2B8C,KAAK,CAAC,CAAD,CAAL,GAAS,EAApC,CAAhB;AACA,MAAI0B,UAAU,GAACzE,SAAS,CAACC,gBAAV,CAA2B8C,KAAK,CAACA,KAAK,CAACzB,MAAN,GAAa,CAAd,CAAL,GAAsB,EAAjD,CAAf;;AACA,MAAGiD,MAAM,IAAEC,WAAX,EAAuB;AACnBzB,IAAAA,KAAK,IAAEsB,IAAF,SAAUtB,KAAV,CAAL,CADmB,CAEnB;AACH,GAHD,MAGM,IAAGwB,MAAM,IAAEE,UAAX,EAAsB;AACxB1B,IAAAA,KAAK,CAACuB,IAAN,CAAWD,IAAX;AACH;;AACD,SAAOtB,KAAP;AAEH;;AA1SgB/C,UA4SVuD,YAAY,UAACF,IAAD,EAAU;AACzB,UAAQA,IAAR;AACI,SAAK,GAAL;AACI,aAAO,IAAP;;AACJ,SAAK,GAAL;AACI,aAAO,IAAP;;AACJ,SAAK,GAAL;AACI,aAAO,IAAP;;AACJ,SAAK,GAAL;AACI,aAAO,IAAP;AARR;AAUH;;AAvTgBrD,UAwTV0E,sBAAsB,UAACC,UAAD,EAAgB;AACzCA,EAAAA,UAAU,GAACA,UAAU,GAAC,EAAtB;;AACA,MAAIA,UAAU,IAAI,KAAlB,EAAyB;AACrB,WAAO,GAAP;AACH;;AACD,MAAIA,UAAU,IAAI,KAAlB,EAAyB;AACrB,WAAO,GAAP;AACH,GAPwC,CAQzC;;;AACA,SAAOA,UAAU,CAACnD,SAAX,CAAqB,CAArB,CAAP;AACH;;AAlUgBxB,UAuUV+B,kBAAkB,UAAC1B,KAAD,EAAW;AAChC,MAAI+C,OAAO,GAAG/C,KAAK,GAAG,EAAtB;;AACA,MAAI+C,OAAO,IAAI,KAAf,EAAsB;AAClB,WAAO,IAAP;AACH,GAFD,MAEO,IAAIA,OAAO,IAAI,KAAf,EAAsB;AACzB,WAAO,IAAP;AACH,GAFM,MAEA,IAAIA,OAAO,IAAI,KAAf,EAAsB;AACzB,WAAO,IAAP;AACH,GAFM,MAEA;AACH,QAAII,OAAO,GAAGJ,OAAO,CAAC5B,SAAR,CAAkB,CAAlB,EAAqB,CAArB,CAAd;AACA,QAAI6B,IAAI,GAAGD,OAAO,CAAC5B,SAAR,CAAkB,CAAlB,CAAX;AACA,QAAIc,MAAM,GAAGtC,SAAS,CAACuD,SAAV,CAAoBF,IAApB,CAAb;;AACA,YAAQG,OAAR;AACI,WAAK,IAAL;AACIlB,QAAAA,MAAM,GAAGA,MAAM,GAAG,GAAlB;AACA;;AACJ,WAAK,IAAL;AACIA,QAAAA,MAAM,GAAGA,MAAM,GAAG,GAAlB;AACA;;AACJ,WAAK,IAAL;AACIA,QAAAA,MAAM,GAAGA,MAAM,GAAG,GAAlB;AACA;;AACJ,WAAK,IAAL;AACIA,QAAAA,MAAM,GAAGA,MAAM,GAAG,GAAlB;AACA;;AACJ,WAAK,IAAL;AACIA,QAAAA,MAAM,GAAGA,MAAM,GAAG,GAAlB;AACA;;AACJ,WAAK,IAAL;AACIA,QAAAA,MAAM,GAAGA,MAAM,GAAG,GAAlB;AACA;;AACJ,WAAK,IAAL;AACIA,QAAAA,MAAM,GAAGA,MAAM,GAAG,GAAlB;AACA;;AACJ,WAAK,IAAL;AACIA,QAAAA,MAAM,GAAGA,MAAM,GAAG,IAAlB;AACA;;AACJ,WAAK,IAAL;AACIA,QAAAA,MAAM,GAAGA,MAAM,GAAG,GAAlB;AACA;;AACJ,WAAK,IAAL;AACIA,QAAAA,MAAM,GAAGA,MAAM,GAAG,GAAlB;AACA;;AACJ,WAAK,IAAL;AACIA,QAAAA,MAAM,GAAGA,MAAM,GAAG,GAAlB;AACA;;AACJ,WAAK,IAAL;AACIA,QAAAA,MAAM,GAAGA,MAAM,GAAG,GAAlB;AACA;;AACJ,WAAK,IAAL;AACIA,QAAAA,MAAM,GAAGA,MAAM,GAAG,GAAlB;AACA;AAvCR;;AAyCA,WAAOA,MAAP;AACH;AACJ;;AA9XgBtC,UA8YV4E,aAAW,UAACC,QAAD,EAAUC,SAAV,EAAsB;AACpC,MAAIC,UAAU,GAAC,EAAf;AACA,MAAIC,UAAU,GAAC,EAAf;AACA,MAAIC,UAAU,GAAC,EAAf;AACA,MAAIC,UAAU,GAAC,EAAf;AACA,MAAIC,SAAS,GAAC,EAAd,CALoC,CAKnB;;AACjB,OAAI,IAAItB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACiB,SAAS,CAACxD,MAAxB,EAA+BuC,CAAC,EAAhC,EAAmC;AAC/B,QAAIQ,IAAI,GAACS,SAAS,CAACjB,CAAD,CAAlB;;AACA,QAAGQ,IAAI,IAAE,GAAN,IAAWA,IAAI,IAAE,GAApB,EAAwB;AACpBc,MAAAA,SAAS,CAACb,IAAV,CAAeD,IAAf;AACA;AACH,KAL8B,CAO/B;;;AACA,QAAIhE,KAAK,GAACa,IAAI,CAAC+C,KAAL,CAAWI,IAAI,GAAC,EAAhB,CAAV;;AACA,QAAGrE,SAAS,CAACI,WAAV,CAAsBC,KAAtB,CAAH,EAAgC;AAC5B8E,MAAAA,SAAS,CAACb,IAAV,CAAeD,IAAf;AACA;AACH;;AACD,QAAIhB,IAAI,GAACgB,IAAI,GAAC,EAAd;;AACA,YAAQhB,IAAR;AACI,WAAK,CAAL;AACI0B,QAAAA,UAAU,CAACT,IAAX,CAAgBD,IAAhB;AACA;;AACJ,WAAK,CAAL;AACIW,QAAAA,UAAU,CAACV,IAAX,CAAgBD,IAAhB;AACA;;AACJ,WAAK,CAAL;AACIY,QAAAA,UAAU,CAACX,IAAX,CAAgBD,IAAhB;AACA;;AACJ,WAAK,CAAL;AACIa,QAAAA,UAAU,CAACZ,IAAX,CAAgBD,IAAhB;AACA;AAZR;AAcH;;AACDc,EAAAA,SAAS,CAACzC,IAAV,CAAe1C,SAAS,CAAC0C,IAAzB;AACAqC,EAAAA,UAAU,CAACrC,IAAX,CAAgB1C,SAAS,CAAC0C,IAA1B;AACAsC,EAAAA,UAAU,CAACtC,IAAX,CAAgB1C,SAAS,CAAC0C,IAA1B;AACAuC,EAAAA,UAAU,CAACvC,IAAX,CAAgB1C,SAAS,CAAC0C,IAA1B;AACAuC,EAAAA,UAAU,CAACvC,IAAX,CAAgB1C,SAAS,CAAC0C,IAA1B;;AACA,UAAQpC,QAAQ,CAACuE,QAAD,CAAhB;AACI,SAAK,CAAL;AACI,aAAO7E,SAAS,CAACoF,YAAV,CAAuBL,UAAvB,EAAkCC,UAAlC,EAA6CC,UAA7C,EAAwDC,UAAxD,EAAmEC,SAAnE,EACHH,UAAU,CAACK,MAAX,CAAkBJ,UAAlB,EAA8BI,MAA9B,CAAqCH,UAArC,EAAiDG,MAAjD,CAAwDN,UAAxD,EAAoEM,MAApE,CAA2EF,SAA3E,CADG,CAAP;;AAEJ,SAAK,CAAL;AACI,aAAOnF,SAAS,CAACoF,YAAV,CAAuBL,UAAvB,EAAkCC,UAAlC,EAA6CC,UAA7C,EAAwDC,UAAxD,EAAmEC,SAAnE,EACHF,UAAU,CAACI,MAAX,CAAkBH,UAAlB,EAA8BG,MAA9B,CAAqCN,UAArC,EAAiDM,MAAjD,CAAwDL,UAAxD,EAAoEK,MAApE,CAA2EF,SAA3E,CADG,CAAP;;AAEJ,SAAK,CAAL;AACI,aAAOnF,SAAS,CAACoF,YAAV,CAAuBL,UAAvB,EAAkCC,UAAlC,EAA6CC,UAA7C,EAAwDC,UAAxD,EAAmEC,SAAnE,EACHD,UAAU,CAACG,MAAX,CAAkBN,UAAlB,EAA8BM,MAA9B,CAAqCL,UAArC,EAAiDK,MAAjD,CAAwDJ,UAAxD,EAAoEI,MAApE,CAA2EF,SAA3E,CADG,CAAP;;AAEJ,SAAK,CAAL;AACI,aAAOnF,SAAS,CAACoF,YAAV,CAAuBL,UAAvB,EAAkCC,UAAlC,EAA6CC,UAA7C,EAAwDC,UAAxD,EAAmEC,SAAnE,EACHJ,UAAU,CAACM,MAAX,CAAkBL,UAAlB,EAA8BK,MAA9B,CAAqCJ,UAArC,EAAiDI,MAAjD,CAAwDH,UAAxD,EAAoEG,MAApE,CAA2EF,SAA3E,CADG,CAAP;AAXR;AAcH;;AApcgBnF,UAucXoF,eAAa,UAACL,UAAD,EAAYC,UAAZ,EAAuBC,UAAvB,EAAkCC,UAAlC,EAA6CC,SAA7C,EAAuDG,KAAvD,EAA+D;AAC9E,SAAO;AACHP,IAAAA,UAAU,EAACA,UADR;AAEHC,IAAAA,UAAU,EAACA,UAFR;AAGHC,IAAAA,UAAU,EAACA,UAHR;AAIHC,IAAAA,UAAU,EAACA,UAJR;AAKHC,IAAAA,SAAS,EAACA,SALP;AAMHG,IAAAA,KAAK,EAACA;AANH,GAAP;AASJ;;AAjdiBtF,UAmdXuF,cAAY,YAAI;AACnB,MAAIC,QAAQ,GAAG;AACXC,IAAAA,IAAI,EAAE,QADK;AAEXC,IAAAA,KAAK,EAAE,CAFI;AAGXC,IAAAA,IAAI,EAAE;AAHK,GAAf;AAMAC,EAAAA,EAAE,CAACC,GAAH,CAAOC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,EAAwCC,IAAI,CAACC,SAAL,CAAeT,QAAf,CAAxC;AACH;;AA3diBxF,UA4dXkG,eAAa,YAAI;AACpB,MAAIV,QAAQ,GAAGQ,IAAI,CAACG,KAAL,CAAWP,EAAE,CAACC,GAAH,CAAOC,YAAP,CAAoBM,OAApB,CAA4B,UAA5B,CAAX,CAAf;AACH","sourceRoot":"/","sourcesContent":["let pokerWeight = [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 3, 5, 16, 17, 18];//主5为18\nlet LEFT_WIN = -1;\nlet RIGHT_WIN = 1;\nexport default class PokerUtil {\n\n    static testLogic = (testArray) => {\n        let gamehost = Math.random() * 4;\n        let roundhost = Math.random() * 4;\n        gamehost = parseInt(gamehost) + 1;\n        roundhost = parseInt(roundhost) + 1;\n        console.log(\"onion\", \"当前游戏主\" + gamehost + \"本轮主\" + roundhost);\n        if (testArray.length == 1) {\n            let testValue = testArray[0] + \"\";\n            console.log(\"onion\", PokerUtil.quaryPokerWeight(parseInt(testValue.substring(0, 2))));\n        } else if (testArray.length >= 2) {\n            console.log(\"onion\", PokerUtil.comparePoker(gamehost, roundhost, testArray[0], testArray[1]));\n        }\n    }\n    static testArrayLogic = (testArray1, testArray2) => {\n        let gamehost = Math.random() * 4;\n        let roundhost = Math.random() * 4;\n        gamehost = parseInt(gamehost) + 1;\n        roundhost = parseInt(roundhost) + 1;\n      \n\n    }\n\n    /**\n     * 比较牌的大小\n     * 最后一位是花色，前面直接比大小\n     * 规则 1游戏主>轮次主>副\n     *      2 5>王>3>2\n     *      3 同为副牌，花色比大小\n     *      4\n     * @param {*} valueLeft  先牌\n     * @param {*} valueRight 后牌\n     */\n    static comparePoker = (gamehost, roundhost, valueLeft, valueRight) => {\n        console.log(\"onion\", \"comparePoker++\" + PokerUtil.quaryPokerValue(valueLeft) + \"/\" + PokerUtil.quaryPokerValue(valueRight));\n        if (Array.isArray(valueLeft) || Array.isArray(valueRight)) {\n            if(valueLeft.length==1){\n                valueLeft=valueLeft[0];\n            }\n            if(valueRight.length==1){\n                valueRight=valueRight[0];\n            }\n        }\n\n        if (Array.isArray(valueLeft) || Array.isArray(valueRight)) {\n            console.error(\"onion\", \"暂不支持数组\");\n            PokerUtil.compareArray(gamehost, roundhost, valueLeft, valueRight);\n            return LEFT_WIN;\n        }\n        if (valueRight == valueLeft) {\n            //完全相同，先牌大\n            return LEFT_WIN;\n        }\n        valueRight = valueRight + \"\";\n        valueLeft = valueLeft + \"\";\n        //1 判断先牌后牌的花色\n        let typeLeft = valueLeft.substring(2);\n        let typeRight = valueRight.substring(2);\n        //2判断先牌后牌值\n        let contentLeft = valueLeft.substring(0, 2);\n        let contentRight = valueRight.substring(0, 2);\n        //3判断牌是否为主 活动主\n        let leftIsHost = typeLeft == gamehost || PokerUtil.quaryIsHost(contentLeft);\n        let rightIsHost = typeLeft == gamehost || PokerUtil.quaryIsHost(contentRight);\n        //4比较\n        if (leftIsHost && rightIsHost) {\n            //同为主，主5最大\n            if (parseInt(contentLeft) == 5) {\n                return LEFT_WIN;\n            } else if (parseInt(contentRight) == 5) {\n                return RIGHT_WIN;\n            } else {\n                //直接比大小\n                let result = PokerUtil.compareSinglePokerBigger(contentLeft, contentRight);\n                if (result != 0) {\n                    return result;\n                } else {\n                    //大小相同，存在活动主和花色主牌值相同情况\n                    if (typeLeft == gamehost) {\n                        return LEFT_WIN;\n                    } else if (typeRight == gamehost) {\n                        return RIGHT_WIN;\n                    } else {//同为活动主\n                        return LEFT_WIN;\n                    }\n                }\n\n            }\n        } else if (leftIsHost) {\n            //先牌是主，先牌大\n            return LEFT_WIN;\n        } else if (rightIsHost) {\n            //后牌是主，后牌大\n            return RIGHT_WIN;\n        } else {\n            return PokerUtil.compareVice(roundhost, typeLeft, typeRight, contentLeft, contentRight);\n        }\n    }\n\n    /**\n     * 不判断花色，直接比大小 只接受两位\n     * 允许返回0\n     *\n     */\n    static compareSinglePokerBigger = (valueLeft, valueRight) => {\n        if (valueLeft.length > 2 || valueRight.length > 2) {\n            console.error(\"只接受两位的\" + valueLeft + \"/\" + valueRight);\n            return 1;\n        }\n        let leftNum = parseInt(valueLeft);\n        let rightNum = parseInt(valueRight);\n        let result = PokerUtil.quaryPokerWeight(rightNum) - PokerUtil.quaryPokerWeight(leftNum);\n        if (result > 0) {\n            result = RIGHT_WIN;\n        } else if (result < 0) {\n            result = LEFT_WIN;\n        }\n        return result;\n\n    }\n\n    /**\n     * 判断牌的大小\n     * @param {*} poker\n     */\n    static quaryPokerWeight(poker) {\n        return pokerWeight.indexOf(poker);\n    }\n\n    /**\n     * 判断牌是不是活动主 15 3 5对应 2 3 5\n     */\n    static quaryIsHost(poker) {\n        let value = parseInt(poker);\n        return value == 15 || value == 3 || value == 5 || value == 16 || value == 17 || value == 18;//2 3 5 小王 大王 主5\n    }\n\n    /**\n     * 返回分数值\n     * @param poker\n     * @returns {*}\n     */\n    static quaryIsSocer(poker){\n        if(poker==5||poker==10){\n            return poker;\n        }else if(poker==13){\n            return 10;\n        }else {\n            return 0;\n        }\n    }\n\n    /**\n     * 判断副牌谁大\n     * @param {*} roundhost\n     * @param {*} valueLeft\n     * @param {*} valueRight\n     */\n    static compareVice(roundhost, typeLeft, typeRight, contentLeft, contentRight) {\n        if (typeRight == typeLeft == roundhost) {\n            return PokerUtil.compareSinglePokerBigger(contentLeft, contentRight);\n        } else if (typeLeft == roundhost) {\n            return LEFT_WIN;\n        } else if (typeRight == roundhost) {\n            return RIGHT_WIN;\n        } else {//都是副牌 不是本轮主，多半是跟牌，意义不大\n            return LEFT_WIN;\n        }\n\n    }\n\n    static compareArray = (gamehost, roundhost, valueLeft, valueRight) => {\n        //偶数张，排数不一致\n        if (valueLeft.length != valueRight.length || valueLeft.length % 2 != 0) {\n            console.error(\"onion\", \"数组长度不一致\");\n            return LEFT_WIN;\n        }\n        //1 排序\n        let arrayLeft = valueLeft.sort();\n        let arrayRight = valueRight.sort();\n        //2 奇数和偶数一样，判断对子合法性\n        let resultLeft = PokerUtil.checkArrayValue(arrayLeft);\n        let resultRight = PokerUtil.checkArrayValue(arrayRight);\n        if (resultLeft[0] == \"-1\") {\n            return RIGHT_WIN;\n        }\n        if (resultRight[0] == \"-1\") {\n            return LEFT_WIN;\n        }\n\n        if (gamehost == resultLeft[0] == resultRight[0]) {\n            //都是主对\n            if (resultLeft[1] > resultRight[1]) {\n                return LEFT_WIN;\n            } else {\n                return RIGHT_WIN;\n            }\n        } else if (gamehost == resultLeft[0]) {\n            return LEFT_WIN;\n        } else if (gamehost == resultRight[0]) {\n            return RIGHT_WIN;\n        } else if (roundhost == resultLeft[0] == resultRight[0]) {\n            //都是副对\n            if (resultLeft[1] > resultRight[1]) {\n                return LEFT_WIN;\n            } else {\n                return RIGHT_WIN;\n            }\n        } else if (roundhost == resultLeft[0]) {\n            return LEFT_WIN;\n        } else if (gamehost == resultRight[0]) {\n            return RIGHT_WIN;\n        } else {//都不是主 跟牌大小无意义\n            return LEFT_WIN;\n        }\n\n        //一对直接比\n        //多对先校验合法性，1是否多对 2是否连对 3花色一致 4\n\n    }\n    /**\n     * 判断对子合法性 返回[花色 权重]\n     * @param {*} array \n     */\n    static checkArrayValue = (array) => {\n        let odd = \"-1\";\n        let even = \"-1\"\n        let lastType = \"-1\";\n        let result = 0;\n        for (let index = 0; index < array.length; index++) {\n            if (index % 2 == 0) {\n                even = array[index];\n            } else {\n                odd = array[index];\n                if (even != odd) {\n                    return [\"-1\", -1];\n                }\n                let cardNum = odd;\n                let type = \"0\";\n                if (cardNum == \"171\" || cardNum == \"161\") {\n                    //大小王\n                    type = \"5\";\n                } else {\n                    let str = cardNum.substring(2);\n                    type = PokerUtil.quaryType(str);\n                }\n                if (lastType != type && lastType != \"-1\") {\n                    //不是首次且与之前花色不同，不能算对子\n                    return [\"-1\", -1];\n                }\n                lastType = type;\n                let compare = cardNum.substring(0, 2);\n                result = result + PokerUtil.quaryPokerWeight(parseInt(compare));\n            }\n        }\n        return [lastType, result];\n    }\n    /**\n     * 比本轮大小，返回赢家 1234顺位\n     */\n    static compareRound = (playPokers) => {\n\n    }\n\n    static destoryArray = (destoryNode) => {\n        if (destoryNode != null) {\n            for (let i = 0; i < destoryNode.length; i++) {\n                destoryNode[i].destroy();\n            }\n        }\n    }\n    static sort=(a,b)=>{\n        a=Math.floor(a/10);\n        b=Math.floor(b/10);\n        let left=PokerUtil.quaryPokerWeight(a);\n        let right=PokerUtil.quaryPokerWeight(b);\n        return left-right;\n    }\n\n    static sortInsert=(array,item)=>{\n        if(array.length===0){\n            array.push(item);\n            return array\n        }\n        // let value=item.substring(0,2);\n        let value=item/10;\n        let weight=PokerUtil.quaryPokerWeight(value);\n        let firstWeight=PokerUtil.quaryPokerWeight(array[0]/10);\n        let lastWeight=PokerUtil.quaryPokerWeight(array[array.length-1]/10);\n        if(weight<=firstWeight){\n            array=[item,...array];\n            // array.unshift(item);\n        }else if(weight>=lastWeight){\n            array.push(item);\n        }\n        return array;\n\n    }\n\n    static quaryType = (type) => {\n        switch (type) {\n            case \"1\":\n                return \"方块\";\n            case \"2\":\n                return \"梅花\";\n            case \"3\":\n                return \"红桃\";\n            case \"4\":\n                return \"黑桃\";\n        }\n    }\n    static quaryPokerTypeValue = (pokerValue) => {\n        pokerValue=pokerValue+\"\";\n        if (pokerValue == \"171\") {\n            return \"3\";\n        }\n        if (pokerValue == \"161\") {\n            return \"4\";\n        }\n        // console.log(\"onion\",\"pokerValue\"+pokerValue);\n        return pokerValue.substring(2);\n    }\n    /**\n     * 通过牌序查花色大小\n     * 最后一位是花色\n     */\n    static quaryPokerValue = (value) => {\n        let cardNum = value + \"\";\n        if (cardNum == \"171\") {\n            return \"大王\";\n        } else if (cardNum == \"161\") {\n            return \"小王\"\n        } else if (cardNum == \"181\") {\n            return \"卡背\"\n        } else {\n            let compare = cardNum.substring(0, 2);\n            let type = cardNum.substring(2);\n            let result = PokerUtil.quaryType(type);\n            switch (compare) {\n                case \"03\":\n                    result = result + \"3\";\n                    break;\n                case \"04\":\n                    result = result + \"4\";\n                    break\n                case \"05\":\n                    result = result + \"5\";\n                    break;\n                case \"06\":\n                    result = result + \"6\";\n                    break;\n                case \"07\":\n                    result = result + \"7\";\n                    break;\n                case \"08\":\n                    result = result + \"8\";\n                    break;\n                case \"09\":\n                    result = result + \"9\";\n                    break;\n                case \"10\":\n                    result = result + \"10\";\n                    break;\n                case \"11\":\n                    result = result + \"J\";\n                    break;\n                case \"12\":\n                    result = result + \"Q\";\n                    break;\n                case \"13\":\n                    result = result + \"K\";\n                    break;\n                case \"14\":\n                    result = result + \"A\";\n                    break;\n                case \"15\":\n                    result = result + \"2\";\n                    break;\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 把牌按花色排好\n     * @param gameHost\n     * @param cardArray\n     * @returns\n     *  {\n            type1Array:type1Array,\n            type2Array:type2Array,\n            type3Array:type3Array,\n            type4Array:type4Array,\n            hostArray:hostArray,\n            total:total\n        }\n     */\n    static sortPokers=(gameHost,cardArray)=>{\n        let type1Array=[];\n        let type2Array=[];\n        let type3Array=[];\n        let type4Array=[];\n        let hostArray=[];//活动主\n        for(let i=0;i<cardArray.length;i++){\n            let item=cardArray[i];\n            if(item==171||item==161){\n                hostArray.push(item);\n                continue;\n            }\n            \n            // let type=parseInt(item.substring(2));\n            let value=Math.floor(item/10);\n            if(PokerUtil.quaryIsHost(value)){\n                hostArray.push(item);\n                continue;\n            }\n            let type=item%10;\n            switch (type){\n                case 1:\n                    type1Array.push(item);\n                    break;\n                case 2:\n                    type2Array.push(item);\n                    break;\n                case 3:\n                    type3Array.push(item);\n                    break;\n                case 4:\n                    type4Array.push(item);\n                    break;\n            }\n        }\n        hostArray.sort(PokerUtil.sort);\n        type1Array.sort(PokerUtil.sort);\n        type2Array.sort(PokerUtil.sort);\n        type3Array.sort(PokerUtil.sort);\n        type3Array.sort(PokerUtil.sort);\n        switch (parseInt(gameHost)){\n            case 1:\n                return PokerUtil.createStatic(type1Array,type2Array,type3Array,type4Array,hostArray,\n                    type2Array.concat(type3Array).concat(type4Array).concat(type1Array).concat(hostArray));\n            case 2:\n                return PokerUtil.createStatic(type1Array,type2Array,type3Array,type4Array,hostArray,\n                    type3Array.concat(type4Array).concat(type1Array).concat(type2Array).concat(hostArray));\n            case 3:\n                return PokerUtil.createStatic(type1Array,type2Array,type3Array,type4Array,hostArray,\n                    type4Array.concat(type1Array).concat(type2Array).concat(type3Array).concat(hostArray));\n            case 4:\n                return PokerUtil.createStatic(type1Array,type2Array,type3Array,type4Array,hostArray,\n                    type1Array.concat(type2Array).concat(type3Array).concat(type4Array).concat(hostArray));\n        }\n    }\n\n   \n   static createStatic=(type1Array,type2Array,type3Array,type4Array,hostArray,total)=>{\n        return {\n            type1Array:type1Array,\n            type2Array:type2Array,\n            type3Array:type3Array,\n            type4Array:type4Array,\n            hostArray:hostArray,\n            total:total\n        }\n\n   }\n\n   static saveRecoder=()=>{\n       let userData = {\n           name: 'Tracer',\n           level: 1,\n           gold: 100\n       };\n\n       cc.sys.localStorage.setItem('userData', JSON.stringify(userData));\n   }\n   static quaryReocder=()=>{\n       let userData = JSON.parse(cc.sys.localStorage.getItem('userData'));\n   }\n\n}"]}