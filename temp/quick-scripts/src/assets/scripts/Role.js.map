{"version":3,"sources":["assets/scripts/Role.js"],"names":["cc","Class","Component","properties","roleBean","RoleBean","level","cardlist","sprite","type","Sprite","hpLabel","Label","descLabel","hpAnimateLabel","targetStamp","tyoe","statuslist","attack","value","underattack","hp","getRoleHp","parseInt","setRoleHp","string","isAlive","hpAnimate","animate","sequence","moveBy","runAction","roundBegin","i","length","operateStatus","StatusType","ROUNDBEGIN","roundOver","encounter","bindRoleBean","role","targetSign","targetCancel","onDrawCard","cardBean"],"mappings":";;;;;;AAAA;;AACA;;;;AAEA;;;;AAKAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAELC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAC,IAAIC,oBAAJ,CAAa,CAAb,CADD;AAERC,IAAAA,KAAK,EAAC,CAAC,CAFC;AAGRC,IAAAA,QAAQ,EAAC,EAHD;AAGI;AACZ;AACAC,IAAAA,MAAM,EAAE;AAAC;AACL,iBAAS,IADL;AAEJC,MAAAA,IAAI,EAAET,EAAE,CAACU;AAFL,KALA;AASRC,IAAAA,OAAO,EAAC;AACJ,iBAAQ,IADJ;AAEJF,MAAAA,IAAI,EAACT,EAAE,CAACY;AAFJ,KATA;AAYN;AACFC,IAAAA,SAAS,EAAC;AACN,iBAAQ,IADF;AAENJ,MAAAA,IAAI,EAACT,EAAE,CAACY;AAFF,KAbF;AAiBRE,IAAAA,cAAc,EAAC;AACb,iBAAQ,IADK;AAEbL,MAAAA,IAAI,EAACT,EAAE,CAACY;AAFK,KAjBP;AAqBRG,IAAAA,WAAW,EAAC;AACR,iBAAQ,IADA;AAERC,MAAAA,IAAI,EAAChB,EAAE,CAACU;AAFA,KArBJ;AAyBPO,IAAAA,UAAU,EAAC,EAzBJ,CAyBO;;AAzBP,GAFP;AA8BLC,EAAAA,MA9BK,kBA8BEC,KA9BF,EA8BQ;AAAC;AAEV,WAAOA,KAAP;AACH,GAjCI;AAkCLC,EAAAA,WAlCK,uBAkCOD,KAlCP,EAkCa;AAAC;AACf,QAAIE,EAAE,GAAC,KAAKjB,QAAL,CAAckB,SAAd,EAAP;AACAD,IAAAA,EAAE,GAACE,QAAQ,CAACF,EAAD,CAAX;AACAA,IAAAA,EAAE,GAACA,EAAE,GAACF,KAAN;;AACA,QAAGE,EAAE,GAAC,CAAN,EAAQ;AACJA,MAAAA,EAAE,GAAC,CAAH;AACH,KANa,CAOd;;;AACA,SAAKjB,QAAL,CAAcoB,SAAd,CAAwBH,EAAxB;AACA,SAAKV,OAAL,CAAac,MAAb,GAAoB,KAAKrB,QAAL,CAAckB,SAAd,EAApB;AACA,WAAOD,EAAE,GAAC,CAAV;AACH,GA7CI;AA8CLK,EAAAA,OA9CK,qBA8CI;AACL,WAAOL,EAAE,GAAC,CAAV;AACH,GAhDI;AAiDLM,EAAAA,SAjDK,uBAiDM;AACP,QAAIC,OAAO,GAAC5B,EAAE,CAAC6B,QAAH,CAAY7B,EAAE,CAAC8B,MAAH,CAAU,CAAV,EAAc,CAAC,EAAf,EAAmB,EAAnB,CAAZ,EAAmC,CAAnC,CAAZ;AACA,SAAKhB,cAAL,CAAoBiB,SAApB,CAA8BH,OAA9B;AACH,GApDI;AAqDL;AACAI,EAAAA,UAtDK,wBAsDO;AACR,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKhB,UAAL,CAAgBiB,MAA9B,EAAqCD,CAAC,EAAtC,EAAyC;AACrC,WAAKhB,UAAL,CAAgBgB,CAAhB,EAAmBE,aAAnB,CAAiCC,iBAAWC,UAA5C;AACH;AACJ,GA1DI;AA2DLC,EAAAA,SA3DK,uBA2DM,CAEV,CA7DI;AA8DL;AACAC,EAAAA,SA/DK,uBA+DM,CACV,CAhEI;AAiELC,EAAAA,YAjEK,wBAiEQC,IAjER,EAiEa;AACd,SAAKrC,QAAL,GAAcqC,IAAd;AACA,SAAK9B,OAAL,CAAac,MAAb,GAAoBgB,IAAI,CAACnB,SAAL,KAAiB,EAArC;AACH,GApEI;AAsEL;AACAoB,EAAAA,UAvEK,wBAuEO,CAEX,CAzEI;AA0EL;AACAC,EAAAA,YA3EK,0BA2ES,CAEb,CA7EI;AA8EL;AACAC,EAAAA,UA/EK,sBA+EMC,QA/EN,EA+Ee,CACnB;AAhFI,CAAT","sourceRoot":"/","sourcesContent":["import RoleBean from \"./beans/RoleBean\";\nimport {StatusType} from \"./Game\";\n\n/**\n * 战斗中的角色 敌我双方\n * 显示逻辑层的脚本\n */\n\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        roleBean:new RoleBean(0),\n        level:-1,\n        cardlist:[],//总手牌\n        // currentcardArrays:[],//当前手牌\n        sprite: {//基础贴图\n            default: null,\n            type: cc.Sprite,\n        },\n        hpLabel:{\n            default:null,\n            type:cc.Label,\n        },//血量\n        descLabel:{\n            default:null,\n            type:cc.Label,\n        },\n        hpAnimateLabel:{\n          default:null,\n          type:cc.Label\n        },\n        targetStamp:{\n            default:null,\n            tyoe:cc.Sprite\n        },\n         statuslist:[],//状态数组\n    },\n\n    attack(value){//触发自身的状态栏，输出伤害值，自身附加状态，敌方附加状态\n\n        return value;\n    },\n    underattack(value){//被攻击，触发自身状态栏，更改自身生命值，状态值\n        let hp=this.roleBean.getRoleHp();\n        hp=parseInt(hp);\n        hp=hp-value;\n        if(hp<0){\n            hp=0;\n        }\n        // this.hpAnimate();\n        this.roleBean.setRoleHp(hp);\n        this.hpLabel.string=this.roleBean.getRoleHp();\n        return hp>0;\n    },\n    isAlive(){\n        return hp>0;\n    },\n    hpAnimate(){\n        let animate=cc.sequence(cc.moveBy(2,  -50, 50),2);\n        this.hpAnimateLabel.runAction(animate);\n    },\n    //找到需要触发的状态节点，并触发\n    roundBegin(){\n        for(let i=0;i<this.statuslist.length;i++){\n            this.statuslist[i].operateStatus(StatusType.ROUNDBEGIN);\n        }\n    },\n    roundOver(){\n\n    },\n    //战斗开始 类似祝福状态 直接触发并消耗\n    encounter(){\n    },\n    bindRoleBean(role){\n        this.roleBean=role;\n        this.hpLabel.string=role.getRoleHp()+\"\";\n    },\n\n    //被标记\n    targetSign(){\n\n    },\n    //取消标记\n    targetCancel(){\n\n    },\n    //返回效果\n    onDrawCard(cardBean){\n    },\n\n\n\n\n\n\n\n});"]}