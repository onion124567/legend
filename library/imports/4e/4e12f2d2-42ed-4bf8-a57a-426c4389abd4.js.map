{"version":3,"sources":["assets/scripts/Game.js"],"names":["PokerUtil","require","AIHelper","self","StatusType","ENCOUNTER","ROUNDBEGIN","ROUNDOVER","CLEAR","DRAW","SEND","LOSE","ATTACK","UNDERATTACK","totalCardNum","cc","Class","Component","properties","logs","type","Label","menuView","Button","coinValueView","cardPrefab","Prefab","cardArrays","Layout","sendBtn","roundOverBtn","roundType","hero","Node","enemy","enemyCardLabel","currentCard","enemyCardArrays","roundSide","roundCount","onLoad","playLog","node","on","roundOver","sendCard","gameEncounter","drawAICard","cardBean","CardBean","enemyRole","onDrawCard","push","drawCard","newCard","instantiate","card","getComponent","heroRole","bindCardBean","bindCardFunction","onCheck","addChild","isCheck","onCancel","getCardBean","sendFocusShow","value","sendEffect","appendLog","attack","live","underattack","destroy","title","roundProgram","RoleBean","bindRoleBean","scheduleOnce","rolettype","number","roundBegin","childrenCount","i","length","string","logicAI","canSend","splice","outerClick","director","loadScene"],"mappings":"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","sourceRoot":"/","sourcesContent":["import CardBean from \"./beans/CardBean\";\nimport RoleBean from \"./beans/RoleBean\";\n\nlet PokerUtil = require(\"PokerUtil\");\nlet AIHelper = require(\"AIHelper\");\nlet self;\nexport var StatusType = {\n    ENCOUNTER: 0,//遭遇\n    ROUNDBEGIN: 1,//回合开始\n    ROUNDOVER: -1,//回合结束\n    CLEAR: -2,//战斗结束\n    DRAW:2,\n    SEND: 3,//出牌\n    LOSE: 4,//弃牌\n    ATTACK: 5,//攻击时触发\n    UNDERATTACK: 6,//被攻击时触发\n}\nlet totalCardNum = 5;\n/**\n * 战斗界面 demo版本，做一个抽卡，每张卡能打3点血，敌方有20点血的demo\n */\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        logs:{\n            default:null,\n            type:cc.Label,\n        },\n\n        menuView: {\n            default: null,\n            type: cc.Button,\n        },\n        coinValueView: {\n            default: null,\n            type: cc.Label,\n        },\n        cardPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        cardArrays: {\n            default: null,\n            type: cc.Layout,\n        },\n        sendBtn: {\n            default: null,\n            type: cc.Button,\n        },\n        roundOverBtn: {\n            default: null,\n            type: cc.Button,\n        },\n        roundType: StatusType.ROUNDBEGIN,\n        hero: {\n            default: null,\n            type: cc.Node\n        },\n        enemy: {\n            default: null,\n            type: cc.Node\n        },\n        enemyCardLabel: {\n            default: null,\n            type: cc.Label,\n        },\n\n        currentCard: null,//玩家当前选中的卡片\n        enemyCardArrays:[],//敌人卡牌\n        roundSide:1,//回合轮次\n        roundCount:0,\n\n\n    },\n\n    onLoad: function () {\n        self = this;\n        this.playLog=\"游戏开始\";\n        this.roundOverBtn.node.on(\"click\", this.roundOver, this);\n        this.sendBtn.node.on(\"click\", this.sendCard, this);\n        this.gameEncounter();\n        // 这里的 this 指向 component\n    },\n    drawAICard: function () {\n        let cardBean=new CardBean();\n        self.enemyRole.onDrawCard(cardBean);\n        self.enemyCardArrays.push(cardBean);\n\n    },\n    //玩家抽牌\n    drawCard: function () {\n        let newCard = cc.instantiate(self.cardPrefab);\n        // newStar.setPicNum(\"i\"+i);\n\n        let card = newCard.getComponent('Card');\n        let cardBean=new CardBean();\n        self.heroRole.onDrawCard(cardBean);\n        card.bindCardBean(cardBean);\n        card.bindCardFunction(this.onCheck);\n        self.cardArrays.node.addChild(newCard);\n    },\n    onCheck: function (card, isCheck) {\n        if (isCheck) {//选中\n            if (self.currentCard != null) {\n                self.currentCard.onCancel();\n            }\n            self.currentCard = card;\n        } else {\n            self.currentCard = null;\n        }\n\n    },\n    /**\n     * 判断牌是否能出\n     * 判断知否是指向性牌\n     *\n     */\n    sendCard: function () {\n        if(self.roundSide!==1){//敌方回合 胜利 不能出牌\n            return;\n        }\n        if (self.currentCard != null) {\n            let card = self.currentCard.node.getComponent(\"Card\");\n            let cardBean=card.getCardBean();\n            self.sendFocusShow(cardBean);\n            let value = cardBean.sendEffect();//造成的伤害值\n            self.appendLog(\"对方受到伤害\"+value);\n            //攻击时的伤害值加强\n            value = self.heroRole.attack(value);\n            //状态调整或附加\n            let live=self.enemyRole.underattack(value);\n            self.currentCard.node.destroy();\n            self.currentCard = null;\n            if(!live){\n                self.roundSide=-1;\n                self.appendLog(\"敌人死亡 游戏胜利\");\n            }\n        }\n\n    },\n\n    sendFocusShow:function (cardBean) {\n        self.appendLog(\"出牌\"+cardBean.title);\n    },\n    roundOver: function () {\n        if(self.roundSide!==1){//敌方回合 胜利 不能出牌\n            return;\n        }\n        self.appendLog(\"回合结束\");\n        this.roundProgram(0);\n    },\n    gameEncounter: function () {\n        let hero = new RoleBean(1);\n        let enemy = new RoleBean(0);\n        this.enemyRole = this.enemy.getComponent('Role');\n        this.enemyRole.bindRoleBean(enemy);\n\n        this.heroRole = this.hero.getComponent('Role');\n        this.heroRole.bindRoleBean(hero);\n\n        this.scheduleOnce(() => this.roundProgram(1), 1);\n    },\n    /**\n     * 每回合的执行顺序\n     */\n    roundProgram: function (rolettype) {\n        let number=0;\n        this.roundSide=rolettype;\n        if (rolettype === 1) {\n            self.appendLog(\"你的回合\")\n            this.roundCount++;\n             this.heroRole.roundBegin();\n             number=self.cardArrays.node.childrenCount;\n            //抽卡直到手牌抽满\n            self.appendLog(\"你抽牌\")\n            for (let i = 0; i < totalCardNum-number; i++) {\n                this.drawCard();\n            }\n            //等待出牌\n        }else {\n            self.appendLog(\"对方回合\")\n            this.enemyRole.roundBegin();\n            number=self.enemyCardArrays.length;\n            self.appendLog(\"对方抽牌\")\n            //调用ai抽牌\n            for (let i = 0; i < totalCardNum-number; i++) {\n                this.drawAICard();\n            }\n            this.enemyCardLabel.string=self.enemyCardArrays.length+\"张\";\n            this.logicAI();\n\n        }\n\n\n    },\n    //AI出牌逻辑\n    logicAI(){\n        for(let i=0;i<self.enemyCardArrays.length;){\n            let cardBean=self.enemyCardArrays[i];\n            let canSend=true;\n            if(canSend){\n                self.enemyCardArrays.splice(i, 1);\n                let value=cardBean.sendEffect();\n                value=self.enemyRole.attack(value);\n                self.appendLog(\"你受到伤害\"+value);\n                self.sendFocusShow(cardBean);\n                let live=self.heroRole.underattack(value);\n                if(!live){\n                    self.appendLog(\"英雄死亡 游戏结束\");\n                    self.roundSide=-1;\n                    return;\n                }\n                this.enemyCardLabel.string=self.enemyCardArrays.length+\"张\";\n                self.scheduleOnce(() => self.logicAI(), 1);\n                return;\n            }else {\n                i++;\n            }\n\n        }\n        self.enemyRole.roundOver();\n        self.roundProgram(1);\n    },\n\n//     move:function(node,distance){\n//         // 创建一个移动动作\n//         let seq = cc.repeat(\n//             cc.sequence(\n//                 cc.moveBy(2,  -distance, 50),\n//                 cc.moveBy(2,distance, -50)\n//             ), 2);\n//\n//\n// // 执行动作\n//         node.runAction(seq);\n// // 停止一个动作\n// //         node.stopAction(action);\n//     },\n    /**\n     * 切换至地图\n     */\n    outerClick: function () {\n        cc.director.loadScene('outermap');\n\n    },\n    appendLog: function (string) {\n        self.playLog = self.playLog + \"\\n\" + string;\n        self.logs.string = self.playLog;\n\n    }\n\n});\n"]}