{"version":3,"sources":["assets/scripts/Role.js"],"names":["cc","Class","Component","properties","roleBean","RoleBean","level","cardlist","sprite","type","Sprite","hpLabel","Label","descLabel","statuslist","attack","value","underattack","hp","getRoleHp","parseInt","setRoleHp","string","roundBegin","i","length","operateStatus","StatusType","ROUNDBEGIN","roundOver","encounter","bindRoleBean","role","onDrawCard","cardBean"],"mappings":";;;;;;AAAA;;AACA;;;;AAEA;;;;AAKAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAELC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAC,IAAIC,oBAAJ,EADD;AAERC,IAAAA,KAAK,EAAC,CAAC,CAFC;AAGRC,IAAAA,QAAQ,EAAC,EAHD;AAGI;AACZ;AACAC,IAAAA,MAAM,EAAE;AAAC;AACL,iBAAS,IADL;AAEJC,MAAAA,IAAI,EAAET,EAAE,CAACU;AAFL,KALA;AASRC,IAAAA,OAAO,EAAC;AACJ,iBAAQ,IADJ;AAEJF,MAAAA,IAAI,EAACT,EAAE,CAACY;AAFJ,KATA;AAYN;AACFC,IAAAA,SAAS,EAAC;AACN,iBAAQ,IADF;AAENJ,MAAAA,IAAI,EAACT,EAAE,CAACY;AAFF,KAbF;AAiBPE,IAAAA,UAAU,EAAC,EAjBJ,CAiBO;;AAjBP,GAFP;AAsBLC,EAAAA,MAtBK,kBAsBEC,KAtBF,EAsBQ;AAAC;AAEV,WAAOA,KAAP;AACH,GAzBI;AA0BLC,EAAAA,WA1BK,uBA0BOD,KA1BP,EA0Ba;AAAC;AACf,QAAIE,EAAE,GAAC,KAAKd,QAAL,CAAce,SAAd,EAAP;AACAD,IAAAA,EAAE,GAACE,QAAQ,CAACF,EAAD,CAAX;AACAA,IAAAA,EAAE,GAACA,EAAE,GAACF,KAAN;;AACA,QAAGE,EAAE,GAAC,CAAN,EAAQ;AACJA,MAAAA,EAAE,GAAC,CAAH;AACH;;AACD,SAAKd,QAAL,CAAciB,SAAd,CAAwBH,EAAxB;AACA,SAAKP,OAAL,CAAaW,MAAb,GAAoB,KAAKlB,QAAL,CAAce,SAAd,EAApB;AACA,WAAOD,EAAE,GAAC,CAAV;AACH,GApCI;AAqCL;AACAK,EAAAA,UAtCK,wBAsCO;AACR,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKV,UAAL,CAAgBW,MAA9B,EAAqCD,CAAC,EAAtC,EAAyC;AACrC,WAAKV,UAAL,CAAgBU,CAAhB,EAAmBE,aAAnB,CAAiCC,iBAAWC,UAA5C;AACH;AACJ,GA1CI;AA2CLC,EAAAA,SA3CK,uBA2CM,CAEV,CA7CI;AA8CL;AACAC,EAAAA,SA/CK,uBA+CM,CACV,CAhDI;AAiDLC,EAAAA,YAjDK,wBAiDQC,IAjDR,EAiDa;AACd,SAAK5B,QAAL,GAAc4B,IAAd;AACA,SAAKrB,OAAL,CAAaW,MAAb,GAAoBU,IAAI,CAACb,SAAL,KAAiB,EAArC;AACH,GApDI;AAsDL;AACAc,EAAAA,UAvDK,sBAuDMC,QAvDN,EAuDe,CACnB;AAxDI,CAAT","sourceRoot":"/","sourcesContent":["import RoleBean from \"./beans/RoleBean\";\nimport {StatusType} from \"./Game\";\n\n/**\n * 战斗中的角色 敌我双方\n * 显示逻辑层的脚本\n */\n\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        roleBean:new RoleBean(),\n        level:-1,\n        cardlist:[],//总手牌\n        // currentcardArrays:[],//当前手牌\n        sprite: {//基础贴图\n            default: null,\n            type: cc.Sprite,\n        },\n        hpLabel:{\n            default:null,\n            type:cc.Label,\n        },//血量\n        descLabel:{\n            default:null,\n            type:cc.Label,\n        },\n         statuslist:[],//状态数组\n    },\n\n    attack(value){//触发自身的状态栏，输出伤害值，自身附加状态，敌方附加状态\n\n        return value;\n    },\n    underattack(value){//被攻击，触发自身状态栏，更改自身生命值，状态值\n        let hp=this.roleBean.getRoleHp();\n        hp=parseInt(hp);\n        hp=hp-value;\n        if(hp<0){\n            hp=0;\n        }\n        this.roleBean.setRoleHp(hp);\n        this.hpLabel.string=this.roleBean.getRoleHp();\n        return hp>0;\n    },\n    //找到需要触发的状态节点，并触发\n    roundBegin(){\n        for(let i=0;i<this.statuslist.length;i++){\n            this.statuslist[i].operateStatus(StatusType.ROUNDBEGIN);\n        }\n    },\n    roundOver(){\n\n    },\n    //战斗开始 类似祝福状态 直接触发并消耗\n    encounter(){\n    },\n    bindRoleBean(role){\n        this.roleBean=role;\n        this.hpLabel.string=role.getRoleHp()+\"\";\n    },\n\n    //返回效果\n    onDrawCard(cardBean){\n    },\n\n\n\n\n\n\n\n});"]}